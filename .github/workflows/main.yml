on: [push]

jobs:
  macos-scar:
    runs-on: macos-latest
    name: Generate macOS Scar bin
    steps:
    - uses: actions/checkout@v2
    - run: './macos-scar.sh'
      shell: bash
    - name: Upload MacOS Scar bin
      uses: actions/upload-artifact@v2
      with:
        name: macos-scar.tar.gz
        path: scar/dist/scarcli.tar.gz
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: scar/dist/scarcli.tar.gz
        asset_name: macos-scar.tar.gz
        asset_content_type: application/gzip
  # linux-scar:
  #   runs-on: ubuntu-latest
  #   name: Generate Linux Scar bin
  #   steps:
  #   - uses: actions/checkout@v2
  #   - run: './linux-scar.sh'
  #     shell: bash
  #   - name: Upload Linux Scar bin
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: linux-scar.tar.gz
  #       path: scar/dist/scarcli.tar.gz
  # windows-scar:
  #   runs-on: windows-latest
  #   name: Generate Windows Scar bin
  #   steps:
  #   - uses: actions/checkout@v2
  #   - run: './windows-scar.ps1'
  #     shell: pwsh
  #   - name: Upload Windows Scar bin
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: windows-scar
  #       path: .\scar\dist\scarcli.exe